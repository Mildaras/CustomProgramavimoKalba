//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\milda\OneDrive\Stalinis kompiuteris\pktProjektas\projektas2023\Frukt\Frukt.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Frukt {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFruktListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class FruktBaseListener : IFruktListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] FruktParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] FruktParser.ConstantExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] FruktParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] FruktParser.IdentifierExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] FruktParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] FruktParser.FunctionCallExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccessExpression([NotNull] FruktParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccessExpression([NotNull] FruktParser.ArrayAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesesExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesExpression([NotNull] FruktParser.ParenthesesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesesExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesExpression([NotNull] FruktParser.ParenthesesExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multdivExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultdivExpression([NotNull] FruktParser.MultdivExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multdivExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultdivExpression([NotNull] FruktParser.MultdivExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>addsubExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddsubExpression([NotNull] FruktParser.AddsubExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addsubExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddsubExpression([NotNull] FruktParser.AddsubExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multipleComparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultipleComparisonExpression([NotNull] FruktParser.MultipleComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multipleComparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultipleComparisonExpression([NotNull] FruktParser.MultipleComparisonExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExpression([NotNull] FruktParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExpression([NotNull] FruktParser.ComparisonExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] FruktParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] FruktParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] FruktParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] FruktParser.LineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] FruktParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] FruktParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] FruktParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] FruktParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] FruktParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] FruktParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] FruktParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] FruktParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] FruktParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] FruktParser.IfBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.elseifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseifBlock([NotNull] FruktParser.ElseifBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.elseifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseifBlock([NotNull] FruktParser.ElseifBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseBlock([NotNull] FruktParser.ElseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseBlock([NotNull] FruktParser.ElseBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.whileBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileBlock([NotNull] FruktParser.WhileBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.whileBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileBlock([NotNull] FruktParser.WhileBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.functionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionStatement([NotNull] FruktParser.FunctionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.functionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionStatement([NotNull] FruktParser.FunctionStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] FruktParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] FruktParser.FunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccess([NotNull] FruktParser.ArrayAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccess([NotNull] FruktParser.ArrayAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.arrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayDeclaration([NotNull] FruktParser.ArrayDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.arrayDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayDeclaration([NotNull] FruktParser.ArrayDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] FruktParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] FruktParser.ExpressionListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] FruktParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] FruktParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.multdivOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultdivOp([NotNull] FruktParser.MultdivOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.multdivOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultdivOp([NotNull] FruktParser.MultdivOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.addsubOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddsubOp([NotNull] FruktParser.AddsubOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.addsubOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddsubOp([NotNull] FruktParser.AddsubOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOp([NotNull] FruktParser.CompareOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOp([NotNull] FruktParser.CompareOpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Frukt
