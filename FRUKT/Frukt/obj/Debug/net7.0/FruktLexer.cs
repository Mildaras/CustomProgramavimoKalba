//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\milda\OneDrive\Stalinis kompiuteris\pktProjektas\projektas2023\Frukt\Frukt.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Frukt {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class FruktLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, WHILE=22, NUMBER=23, FLOAT=24, 
		TEXT=25, BOOL=26, WHITESPACE=27, IDENTIFIER=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "DIGIT", "T", "R", "U", "E", "F", 
		"A", "L", "S", "W", "H", "I", "WHILE", "NUMBER", "FLOAT", "TEXT", "BOOL", 
		"WHITESPACE", "IDENTIFIER"
	};


	public FruktLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'.'", "'{'", "'}'", "'='", "'if'", "'else'", "'('", "','", "')'", 
		"'['", "']'", "'*'", "'/'", "'+'", "'-'", "'=='", "'!='", "'<'", "'>'", 
		"'<='", "'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "WHILE", "NUMBER", 
		"FLOAT", "TEXT", "BOOL", "WHITESPACE", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Frukt.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xD4\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3"+
		"\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A"+
		"\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F"+
		"\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3#\x3#\x3#\x3#\x3$\x6$\xA5"+
		"\n$\r$\xE$\xA6\x3%\x6%\xAA\n%\r%\xE%\xAB\x3%\x3%\x6%\xB0\n%\r%\xE%\xB1"+
		"\x3&\x3&\a&\xB6\n&\f&\xE&\xB9\v&\x3&\x3&\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'"+
		"\x3\'\x3\'\x3\'\x3\'\x3\'\x5\'\xC8\n\'\x3(\x3(\x3(\x3(\x3)\x3)\a)\xD0"+
		"\n)\f)\xE)\xD3\v)\x2\x2\x2*\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r"+
		"\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF"+
		"\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17"+
		"-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2\x2"+
		"=\x2\x2?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x18G\x2\x19I\x2\x1AK\x2\x1B"+
		"M\x2\x1CO\x2\x1DQ\x2\x1E\x3\x2\x12\x3\x2\x32;\x4\x2VVvv\x4\x2TTtt\x4\x2"+
		"WWww\x4\x2GGgg\x4\x2HHhh\x4\x2\x43\x43\x63\x63\x4\x2NNnn\x4\x2UUuu\x4"+
		"\x2YYyy\x4\x2JJjj\x4\x2KKkk\x3\x2$$\x4\x2\v\v\"\"\x5\x2\x43\\\x61\x61"+
		"\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\xCD\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2\x45"+
		"\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2"+
		"\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x3S\x3\x2\x2\x2\x5U\x3\x2\x2\x2"+
		"\aW\x3\x2\x2\x2\tY\x3\x2\x2\x2\v[\x3\x2\x2\x2\r^\x3\x2\x2\x2\xF\x63\x3"+
		"\x2\x2\x2\x11\x65\x3\x2\x2\x2\x13g\x3\x2\x2\x2\x15i\x3\x2\x2\x2\x17k\x3"+
		"\x2\x2\x2\x19m\x3\x2\x2\x2\x1Bo\x3\x2\x2\x2\x1Dq\x3\x2\x2\x2\x1Fs\x3\x2"+
		"\x2\x2!u\x3\x2\x2\x2#x\x3\x2\x2\x2%{\x3\x2\x2\x2\'}\x3\x2\x2\x2)\x7F\x3"+
		"\x2\x2\x2+\x82\x3\x2\x2\x2-\x85\x3\x2\x2\x2/\x87\x3\x2\x2\x2\x31\x89\x3"+
		"\x2\x2\x2\x33\x8B\x3\x2\x2\x2\x35\x8D\x3\x2\x2\x2\x37\x8F\x3\x2\x2\x2"+
		"\x39\x91\x3\x2\x2\x2;\x93\x3\x2\x2\x2=\x95\x3\x2\x2\x2?\x97\x3\x2\x2\x2"+
		"\x41\x99\x3\x2\x2\x2\x43\x9B\x3\x2\x2\x2\x45\x9D\x3\x2\x2\x2G\xA4\x3\x2"+
		"\x2\x2I\xA9\x3\x2\x2\x2K\xB3\x3\x2\x2\x2M\xC7\x3\x2\x2\x2O\xC9\x3\x2\x2"+
		"\x2Q\xCD\x3\x2\x2\x2ST\a\x30\x2\x2T\x4\x3\x2\x2\x2UV\a}\x2\x2V\x6\x3\x2"+
		"\x2\x2WX\a\x7F\x2\x2X\b\x3\x2\x2\x2YZ\a?\x2\x2Z\n\x3\x2\x2\x2[\\\ak\x2"+
		"\x2\\]\ah\x2\x2]\f\x3\x2\x2\x2^_\ag\x2\x2_`\an\x2\x2`\x61\au\x2\x2\x61"+
		"\x62\ag\x2\x2\x62\xE\x3\x2\x2\x2\x63\x64\a*\x2\x2\x64\x10\x3\x2\x2\x2"+
		"\x65\x66\a.\x2\x2\x66\x12\x3\x2\x2\x2gh\a+\x2\x2h\x14\x3\x2\x2\x2ij\a"+
		"]\x2\x2j\x16\x3\x2\x2\x2kl\a_\x2\x2l\x18\x3\x2\x2\x2mn\a,\x2\x2n\x1A\x3"+
		"\x2\x2\x2op\a\x31\x2\x2p\x1C\x3\x2\x2\x2qr\a-\x2\x2r\x1E\x3\x2\x2\x2s"+
		"t\a/\x2\x2t \x3\x2\x2\x2uv\a?\x2\x2vw\a?\x2\x2w\"\x3\x2\x2\x2xy\a#\x2"+
		"\x2yz\a?\x2\x2z$\x3\x2\x2\x2{|\a>\x2\x2|&\x3\x2\x2\x2}~\a@\x2\x2~(\x3"+
		"\x2\x2\x2\x7F\x80\a>\x2\x2\x80\x81\a?\x2\x2\x81*\x3\x2\x2\x2\x82\x83\a"+
		"@\x2\x2\x83\x84\a?\x2\x2\x84,\x3\x2\x2\x2\x85\x86\t\x2\x2\x2\x86.\x3\x2"+
		"\x2\x2\x87\x88\t\x3\x2\x2\x88\x30\x3\x2\x2\x2\x89\x8A\t\x4\x2\x2\x8A\x32"+
		"\x3\x2\x2\x2\x8B\x8C\t\x5\x2\x2\x8C\x34\x3\x2\x2\x2\x8D\x8E\t\x6\x2\x2"+
		"\x8E\x36\x3\x2\x2\x2\x8F\x90\t\a\x2\x2\x90\x38\x3\x2\x2\x2\x91\x92\t\b"+
		"\x2\x2\x92:\x3\x2\x2\x2\x93\x94\t\t\x2\x2\x94<\x3\x2\x2\x2\x95\x96\t\n"+
		"\x2\x2\x96>\x3\x2\x2\x2\x97\x98\t\v\x2\x2\x98@\x3\x2\x2\x2\x99\x9A\t\f"+
		"\x2\x2\x9A\x42\x3\x2\x2\x2\x9B\x9C\t\r\x2\x2\x9C\x44\x3\x2\x2\x2\x9D\x9E"+
		"\x5? \x2\x9E\x9F\x5\x41!\x2\x9F\xA0\x5\x43\"\x2\xA0\xA1\x5;\x1E\x2\xA1"+
		"\xA2\x5\x35\x1B\x2\xA2\x46\x3\x2\x2\x2\xA3\xA5\x5-\x17\x2\xA4\xA3\x3\x2"+
		"\x2\x2\xA5\xA6\x3\x2\x2\x2\xA6\xA4\x3\x2\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7"+
		"H\x3\x2\x2\x2\xA8\xAA\x5-\x17\x2\xA9\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2"+
		"\x2\xAB\xA9\x3\x2\x2\x2\xAB\xAC\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAF"+
		"\a.\x2\x2\xAE\xB0\x5-\x17\x2\xAF\xAE\x3\x2\x2\x2\xB0\xB1\x3\x2\x2\x2\xB1"+
		"\xAF\x3\x2\x2\x2\xB1\xB2\x3\x2\x2\x2\xB2J\x3\x2\x2\x2\xB3\xB7\a$\x2\x2"+
		"\xB4\xB6\n\xE\x2\x2\xB5\xB4\x3\x2\x2\x2\xB6\xB9\x3\x2\x2\x2\xB7\xB5\x3"+
		"\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xBA\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2"+
		"\xBA\xBB\a$\x2\x2\xBBL\x3\x2\x2\x2\xBC\xBD\x5/\x18\x2\xBD\xBE\x5\x31\x19"+
		"\x2\xBE\xBF\x5\x33\x1A\x2\xBF\xC0\x5\x35\x1B\x2\xC0\xC8\x3\x2\x2\x2\xC1"+
		"\xC2\x5\x37\x1C\x2\xC2\xC3\x5\x39\x1D\x2\xC3\xC4\x5;\x1E\x2\xC4\xC5\x5"+
		"=\x1F\x2\xC5\xC6\x5\x35\x1B\x2\xC6\xC8\x3\x2\x2\x2\xC7\xBC\x3\x2\x2\x2"+
		"\xC7\xC1\x3\x2\x2\x2\xC8N\x3\x2\x2\x2\xC9\xCA\t\xF\x2\x2\xCA\xCB\x3\x2"+
		"\x2\x2\xCB\xCC\b(\x2\x2\xCCP\x3\x2\x2\x2\xCD\xD1\t\x10\x2\x2\xCE\xD0\t"+
		"\x11\x2\x2\xCF\xCE\x3\x2\x2\x2\xD0\xD3\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2"+
		"\xD1\xD2\x3\x2\x2\x2\xD2R\x3\x2\x2\x2\xD3\xD1\x3\x2\x2\x2\t\x2\xA6\xAB"+
		"\xB1\xB7\xC7\xD1\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Frukt
