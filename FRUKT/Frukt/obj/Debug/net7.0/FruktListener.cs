//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\milda\OneDrive\Stalinis kompiuteris\pktProjektas\projektas2023\Frukt\Frukt.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Frukt {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="FruktParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IFruktListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] FruktParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] FruktParser.ConstantExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] FruktParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] FruktParser.IdentifierExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallExpression([NotNull] FruktParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallExpression([NotNull] FruktParser.FunctionCallExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccessExpression([NotNull] FruktParser.ArrayAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccessExpression([NotNull] FruktParser.ArrayAccessExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesesExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesesExpression([NotNull] FruktParser.ParenthesesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesesExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesesExpression([NotNull] FruktParser.ParenthesesExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multdivExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultdivExpression([NotNull] FruktParser.MultdivExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multdivExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultdivExpression([NotNull] FruktParser.MultdivExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>addsubExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddsubExpression([NotNull] FruktParser.AddsubExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addsubExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddsubExpression([NotNull] FruktParser.AddsubExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multipleComparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultipleComparisonExpression([NotNull] FruktParser.MultipleComparisonExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multipleComparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultipleComparisonExpression([NotNull] FruktParser.MultipleComparisonExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpression([NotNull] FruktParser.ComparisonExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpression([NotNull] FruktParser.ComparisonExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] FruktParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] FruktParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] FruktParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] FruktParser.LineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] FruktParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] FruktParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] FruktParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] FruktParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] FruktParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] FruktParser.AssignmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] FruktParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] FruktParser.ConstantContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] FruktParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] FruktParser.IfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseifBlock([NotNull] FruktParser.ElseifBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseifBlock([NotNull] FruktParser.ElseifBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseBlock([NotNull] FruktParser.ElseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseBlock([NotNull] FruktParser.ElseBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileBlock([NotNull] FruktParser.WhileBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileBlock([NotNull] FruktParser.WhileBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.functionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionStatement([NotNull] FruktParser.FunctionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.functionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionStatement([NotNull] FruktParser.FunctionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] FruktParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] FruktParser.FunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccess([NotNull] FruktParser.ArrayAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccess([NotNull] FruktParser.ArrayAccessContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayDeclaration([NotNull] FruktParser.ArrayDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayDeclaration([NotNull] FruktParser.ArrayDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] FruktParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] FruktParser.ExpressionListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] FruktParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] FruktParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.multdivOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultdivOp([NotNull] FruktParser.MultdivOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.multdivOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultdivOp([NotNull] FruktParser.MultdivOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.addsubOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddsubOp([NotNull] FruktParser.AddsubOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.addsubOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddsubOp([NotNull] FruktParser.AddsubOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="FruktParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareOp([NotNull] FruktParser.CompareOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FruktParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareOp([NotNull] FruktParser.CompareOpContext context);
}
} // namespace Frukt
